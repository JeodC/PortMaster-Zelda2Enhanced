#!/bin/bash
# Set GAMEDIR to the current directory and set logfile
GAMEDIR="$PWD"
LOGFILE="$GAMEDIR/patchlog.txt"

# Redirect output and error to the log file
exec > >(tee -a "$LOGFILE") 2>&1
echo "GAMEDIR is set to: $GAMEDIR"

# Exports
export DATADIR="$GAMEDIR/assets"
export DATAFILE="ziiaol.port"
export LD_LIBRARY_PATH="$GAMEDIR/lib:$GAMEDIR/tools/libs:$LD_LIBRARY_PATH"
export SDL_GAMECONTROLLERCONFIG="$sdl_controllerconfig"
export TOOLDIR="$GAMEDIR/tools"
export TMPDIR="$GAMEDIR/tmp"
export PATH="$GAMEDIR/tools:$PATH"

# Permissions
chmod 666 /dev/uinput
chmod 777 "$TOOLDIR/gmKtool.py"
chmod 777 "$TOOLDIR/oggenc"

cd "$GAMEDIR"

unzip_assets() {
    # Unzip assets from the located .zip file into $DATADIR
    echo "Unzipping assets from $ZIP_FILE..."
    ./tools/7za x "$ZIP_FILE" -o"$DATADIR" -y
    
    if [ $? -eq 0 ]; then
        echo "Assets unzipped successfully to $DATADIR."
        rm -f "$ZIP_FILE"
        rm -rf $DATADIR/*.dll $DATADIR/*.gitkeep $DATADIR/*.exe
        mv "$DATADIR/data.win" "$DATADIR/game.droid"
    else
        echo "Failed to unzip assets."
        exit 1
    fi
}

compress_audio() {
    mkdir -p "$TMPDIR"

    # Run the compression tool
    PYTHON=$(which python3)
        echo "Running GMTools on data and audiogroups."
        $PYTHON ./tools/gmKtool.py -vv -m 1000 -r -b 64 -d "$TMPDIR" "$DATADIR/game.droid"

    if [ $? -eq 0 ]; then
        echo "Compression completed successfully."
        mv "$TMPDIR/"* "$DATADIR"
        echo "Moved compressed files to $DATADIR."
        rmdir "$TMPDIR"
        echo "Temporary directory $TMPDIR removed."
        echo "Audio compression applied successfully."
    else
        echo "Audio compression failed."
        echo "Cleaning up temporary directory $TMPDIR."
        rm -rf "$TMPDIR"
    fi
}

zip_archive() {
        zip -r -0 $DATAFILE ./assets/
        echo "Zipped contents to $DATAFILE"
        rm -rf ./assets
        mkdir -p saves
}

process_game() {
    # Locate the .exe file in $DATADIR
    ZIP_FILE=$(find "$DATADIR" -maxdepth 1 -name "*.zip" | head -n 1)

    if [ -z "$ZIP_FILE" ]; then
        echo "No .zip file found in $DATADIR."
        exit 1
    else
        unzip_assets
    fi

    echo "Compressing audio..."
    compress_audio
    sleep 1
    echo "Finishing up..."
    zip_archive
    sleep 1
	
    # Final completion message
    echo "Patching process complete!"
}

# Call the function
process_game